module NumberToLetter.PortugueseSpec (spec) where

import NumberToLetter.Portuguese (numberToLetter)
import Test.Hspec

spec :: Spec
spec = do
    describe "Convert number to letter in Portuguese" $ do
        it "numbers up to sixteen are simple constants" $ do
            numberToLetter 0 `shouldBe` "zero"
            numberToLetter 1 `shouldBe` "um"
            numberToLetter 2 `shouldBe` "dois"
            numberToLetter 3 `shouldBe` "três"
            numberToLetter 4 `shouldBe` "quatro"
            numberToLetter 5 `shouldBe` "cinco"
            numberToLetter 6 `shouldBe` "seis"
            numberToLetter 7 `shouldBe` "sete"
            numberToLetter 8 `shouldBe` "oito"
            numberToLetter 9 `shouldBe` "nove"
            numberToLetter 10 `shouldBe` "dez"
            numberToLetter 11 `shouldBe` "onze"
            numberToLetter 12 `shouldBe` "doze"
            numberToLetter 13 `shouldBe` "treze"
            numberToLetter 14 `shouldBe` "catorze"
            numberToLetter 15 `shouldBe` "quinze"
            numberToLetter 16 `shouldBe` "dezasseis"
            numberToLetter 17 `shouldBe` "dezassete"
            numberToLetter 18 `shouldBe` "dezoito"
            numberToLetter 19 `shouldBe` "dezanove"
        it "numbers have a word and spaces between words" $ do
            numberToLetter 20 `shouldBe` "vinte"
            numberToLetter 22 `shouldBe` "vinte e dois"
            numberToLetter 23 `shouldBe` "vinte e três"
            numberToLetter 27 `shouldBe` "vinte e sete"
            numberToLetter 29 `shouldBe` "vinte e nove"
            numberToLetter 30 `shouldBe` "trinta"
            numberToLetter 42 `shouldBe` "quarenta e dois"
            numberToLetter 51 `shouldBe` "cinquenta e um"
            numberToLetter 68 `shouldBe` "sexenta e oito"
            numberToLetter 74 `shouldBe` "setenta e quatro"
            numberToLetter 79 `shouldBe` "setenta e nove"
            numberToLetter 84 `shouldBe` "oitenta e quatro"
            numberToLetter 91 `shouldBe` "noventa e um"
            numberToLetter 99 `shouldBe` "noventa e nove"
        it "one is omitted before one hundred and one thousand" $ do
            numberToLetter 100 `shouldBe` "cem"
            numberToLetter 101 `shouldBe` "cento e um"
            numberToLetter 121 `shouldBe` "cento e vinte e um"
            numberToLetter 138 `shouldBe` "cento e trinta e oito"
            numberToLetter 199 `shouldBe` "cento e noventa e nove"
            numberToLetter 1000 `shouldBe` "mil"
            numberToLetter 1007 `shouldBe` "mil e sete"
        it "hundreds are pluralized" $ do
            numberToLetter 200 `shouldBe` "duzentos"
            numberToLetter 203 `shouldBe` "duzentos e três"
            numberToLetter 300 `shouldBe` "trezentos"
            numberToLetter 302 `shouldBe` "trezentos e dois"
            numberToLetter 400 `shouldBe` "quatrocentos"
            numberToLetter 487 `shouldBe` "quatrocentos e oitenta e sete"
            numberToLetter 500 `shouldBe` "quinhentos"
            numberToLetter 600 `shouldBe` "seiscentos"
            numberToLetter 700 `shouldBe` "setecentos"
            numberToLetter 701 `shouldBe` "setecentos e um"
            numberToLetter 800 `shouldBe` "oitocentos"
            numberToLetter 811 `shouldBe` "oitocentos e onze"
            numberToLetter 900 `shouldBe` "novecentos"
            numberToLetter 940 `shouldBe` "novecentos e quarenta"
            numberToLetter 999 `shouldBe` "novecentos e noventa e nove"
        it "thousands are not pluralized" $ do
            numberToLetter 2000 `shouldBe` "dois mil"
            numberToLetter 2004 `shouldBe` "dois mil e quatro"
            numberToLetter 2058 `shouldBe` "dois mil e cinquenta e oito"
            numberToLetter 2400 `shouldBe` "dois mil e quatrocentos"
            numberToLetter 5009 `shouldBe` "cinco mil e nove"
            numberToLetter 200000 `shouldBe` "duzentos mil"
            numberToLetter 999999 `shouldBe` "novecentos e noventa e nove mil e novecentos e noventa e nove"
        it "millions and billions are pluralized" $ do
            numberToLetter 1000000 `shouldBe` "um milhão"
            numberToLetter 2000000 `shouldBe` "dois milhões"
            numberToLetter 1000000000 `shouldBe` "um bilhão"
            numberToLetter 4000000000 `shouldBe` "quatro bilhões"
